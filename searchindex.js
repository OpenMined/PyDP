Search.setIndex({"docnames": ["index", "introduction", "pydp", "readme"], "filenames": ["index.rst", "introduction.rst", "pydp.rst", "readme.rst"], "titles": ["PyDP Documentation", "Introduction To Differential Privacy", "PyDP", "Introduction to PyDP"], "terms": {"introduct": 0, "To": [0, 3], "differenti": [0, 2, 3], "privaci": [0, 2, 3], "machin": [0, 3], "learn": 0, "data": [0, 2, 3], "why": 0, "i": [0, 2, 3], "so": [0, 2], "import": [0, 3], "how": 0, "implement": [0, 2], "local": 0, "global": 0, "formal": 0, "definit": 0, "Of": 0, "In": [0, 3], "real": 0, "world": [0, 3], "further": 0, "read": [0, 3], "instal": 0, "exampl": [0, 1], "resourc": 0, "support": 0, "commun": [0, 1], "slack": 0, "contribut": [0, 2], "licens": 0, "algorithm": [0, 1, 3], "numer": [0, 3], "mechan": [0, 3], "distribut": 0, "util": 0, "ml": [0, 1], "partit": 0, "select": 0, "The": [1, 2, 3], "era": 1, "where": [1, 2], "we": [1, 2], "ar": [1, 2, 3], "live": 1, "driven": [1, 3], "ton": 1, "being": [1, 2], "gener": 1, "everi": 1, "second": 1, "A": [1, 2], "lot": 1, "thi": [1, 2], "us": [1, 2, 3], "improv": 1, "our": 1, "own": 1, "lifestyl": 1, "recommend": 1, "best": 1, "seri": 1, "watch": 1, "after": [1, 2], "tire": 1, "dai": 1, "work": 1, "suggest": 1, "gift": 1, "bui": 1, "when": [1, 2], "": [1, 3], "friend": 1, "birthdai": 1, "keep": [1, 2], "parti": 1, "photo": 1, "sort": 1, "can": [1, 2, 3], "cherish": 1, "them": 1, "year": 1, "later": [1, 2, 3], "all": [1, 2, 3], "big": 1, "compani": 1, "gain": 1, "insight": 1, "progress": 1, "which": [1, 2, 3], "drive": 1, "busi": 1, "ha": [1, 2], "made": 1, "life": 1, "from": [1, 2, 3], "easi": 1, "easier": 1, "just": 1, "about": [1, 3], "rais": 1, "question": [1, 3], "chang": [1, 3], "wai": 1, "healthcar": 1, "those": 1, "who": 1, "lone": 1, "have": [1, 3], "one": [1, 2], "talk": 1, "answer": 1, "ye": 1, "also": [1, 2, 3], "No": 1, "extens": 1, "both": 1, "research": [1, 3], "more": [1, 3], "better": [1, 2, 3], "particular": 1, "topic": 1, "now": 1, "cannot": [1, 2], "releas": [1, 2], "privat": [1, 2, 3], "inform": [1, 3], "onc": 1, "leak": [1, 3], "misus": 1, "take": [1, 2], "tackl": 1, "medic": 1, "problem": 1, "need": 1, "health": 1, "record": [1, 2], "These": [1, 3], "consid": [1, 2], "person": [1, 3], "would": [1, 2, 3], "love": 1, "fact": [1, 2], "her": 1, "hi": 1, "identifi": 1, "anyon": 1, "internet": 1, "henc": 1, "some": [1, 3], "issu": [1, 3], "immedi": 1, "solut": [1, 3], "hand": 1, "ti": 1, "due": 1, "unavail": 1, "come": [1, 3], "pictur": 1, "smarter": 1, "secur": 1, "ai": [1, 3], "accord": 1, "andrew": 1, "trask": 1, "founder": 1, "openmin": [1, 3], "process": [1, 2], "solv": 1, "see": 1, "over": [1, 3], "without": 1, "individu": 1, "preserv": 1, "mit": 1, "deep": 1, "aim": 1, "ani": 1, "safe": 1, "extern": 1, "attack": 1, "an": [1, 2, 3], "ident": [1, 2], "even": 1, "approach": 1, "maintain": 1, "kind": 1, "anonym": 1, "remov": 1, "dataset": [1, 2], "It": [1, 2], "seen": 1, "con": 1, "follow": [1, 2, 3], "certain": [1, 2], "field": [1, 2], "mai": [1, 2], "make": [1, 2, 3], "entir": 1, "useless": 1, "fit": 1, "analysi": 1, "There": 1, "relat": 1, "sourc": [1, 3], "avail": 1, "web": 1, "statist": [1, 3], "studi": 1, "easili": 1, "re": 1, "If": [1, 2, 3], "larg": 1, "type": [1, 2, 3], "queri": [1, 2], "drawn": 1, "predict": 1, "prone": 1, "risk": 1, "fundament": 1, "wrong": 1, "netflix": 1, "challeng": 1, "everyon": 1, "build": 1, "up": 1, "engin": 1, "For": [1, 3], "thei": [1, 2, 3], "100": [1, 2], "million": 1, "movi": 1, "rate": [1, 2], "half": [1, 2], "user": 1, "did": 1, "publicli": 1, "could": [1, 3], "lead": 1, "identif": 1, "imag": 1, "credit": 1, "udac": 1, "despit": 1, "wa": [1, 2], "usernam": 1, "name": 1, "yet": 1, "two": [1, 2], "univers": 1, "texa": 1, "paper": 1, "show": 1, "de": 1, "maximum": [1, 2], "chunk": 1, "scrape": 1, "imdb": 1, "websit": 1, "were": 1, "abl": 1, "ten": 1, "down": 1, "line": 1, "publish": 1, "anoth": 1, "review": 1, "present": 1, "other": [1, 2, 3], "instanc": [1, 2], "too": 1, "been": [1, 3], "led": 1, "leakag": [1, 3], "learnt": 1, "let": 1, "actual": 1, "cynthia": 1, "dwork": 1, "describ": 1, "promis": 1, "holder": 1, "curat": [1, 3], "subject": 1, "you": [1, 3], "affect": 1, "advers": 1, "otherwis": [1, 2], "allow": [1, 2], "your": [1, 3], "matter": 1, "what": [1, 3], "set": [1, 2, 3], "thu": 1, "new": 1, "area": 1, "address": 1, "paradox": 1, "noth": 1, "while": 1, "popul": 1, "done": 1, "send": 1, "function": [1, 2], "appli": 1, "databas": 1, "protocol": 1, "run": [1, 2], "variou": 1, "techniqu": 1, "multiparti": 1, "goal": 1, "highest": 1, "possibl": [1, 3], "accuraci": [1, 2, 3], "add": [1, 2], "random": [1, 2], "nois": [1, 2, 3], "start": [1, 3], "level": [1, 2], "e": [1, 2], "sent": 1, "aggreg": [1, 2, 3], "confidenti": 1, "do": [1, 2], "want": [1, 3], "trust": 1, "beforehand": 1, "adopt": 1, "complet": 1, "googl": [1, 2, 3], "return": [1, 2], "leav": 1, "amount": [1, 2], "ad": [1, 2, 3], "result": [1, 2, 3], "accur": 1, "involv": 1, "lesser": 1, "book": [1, 2], "foundat": 1, "aaron": 1, "roth": 1, "defin": [1, 2], "glossari": 1, "m": 1, "domain": [1, 2], "n": [1, 2], "x": [1, 2, 3], "\u03b5": [1, 3], "\u03b4": 1, "rang": [1, 2], "y": [1, 2], "1": [1, 2, 3], "pr": 1, "exp": 1, "epsilon": [1, 2, 3], "delta": [1, 2], "paramet": [1, 2], "measur": [1, 3], "threshold": [1, 2, 3], "differ": [1, 2], "0": [1, 2, 3], "mean": [1, 2, 3], "equal": 1, "probabl": 1, "accident": 1, "compar": [1, 2], "valu": [1, 2], "call": [1, 2, 3], "perfect": 1, "known": 1, "budget": [1, 2], "ensur": 1, "draw": [1, 2], "help": [1, 3], "wide": 1, "librari": [1, 3], "pydp": 1, "python": [1, 3], "wrapper": [1, 3], "project": [1, 3], "apart": 1, "case": 1, "geoloc": 1, "search": 1, "cover": 1, "blogpost": 1, "FOR": 1, "dp": [1, 3], "opendp": 1, "harvard": 1, "microsoft": 1, "diffprivlib": 1, "ibm": 1, "IN": 1, "top": 1, "tech": 1, "here": 1, "uber": 1, "popular": 1, "ride": 1, "share": 1, "its": 1, "practic": [1, 2], "method": [1, 3], "elast": 1, "sensit": [1, 2, 3], "develop": 1, "california": 1, "berkelei": 1, "mathemat": [1, 3], "limit": [1, 2], "number": [1, 2], "staff": 1, "conduct": 1, "traffic": 1, "pattern": 1, "driver": 1, "revenu": 1, "addit": [1, 2, 3], "potenti": [1, 3], "breach": 1, "sever": 1, "appl": 1, "analys": 1, "behaviour": 1, "experi": 1, "access": 1, "brows": 1, "histori": 1, "app": 1, "word": 1, "etc": [1, 3], "compromis": 1, "But": 1, "extrem": 1, "raw": 1, "befor": 1, "server": 1, "scale": [1, 2], "across": 1, "har": 1, "decis": 1, "taken": [1, 2], "novel": 1, "themselv": 1, "perform": 1, "core": 1, "product": 1, "One": [1, 2], "gboard": 1, "keyboard": 1, "feder": 1, "decreas": [1, 2], "relianc": 1, "cloud": 1, "put": 1, "strong": 1, "focu": 1, "rather": 1, "than": [1, 2], "encrypt": 1, "download": 1, "current": [1, 2, 3], "model": [1, 3], "devic": 1, "updat": [1, 3], "each": 1, "averag": [1, 2], "2019": 1, "open": [1, 3], "plai": 1, "role": 1, "protect": 1, "effort": 1, "democrat": 1, "know": 1, "head": 1, "amaz": 1, "blog": 1, "cours": 1, "class": 2, "laplacian": [2, 3], "boundedmean": [2, 3], "float": [2, 3], "lower_bound": [2, 3], "int": [2, 3], "none": [2, 3], "upper_bound": [2, 3], "l0_sensit": 2, "linf_sensit": 2, "dtype": 2, "str": 2, "comput": [2, 3], "manner": 2, "increment": 2, "provid": [2, 3], "input": 2, "vale": 2, "normal": 2, "middl": 2, "That": 2, "u": 2, "calcul": [2, 3], "sum": 2, "noisi": 2, "count": [2, 3], "section": 2, "2": [2, 3], "5": [2, 3], "4": 2, "http": [2, 3], "com": [2, 3], "id": 2, "wfttdqaaqbaj": 2, "pg": 2, "pa24": 2, "v": 2, "onepag": 2, "q": 2, "f": 2, "fals": 2, "add_entri": 2, "list": [2, 3], "multipl": 2, "note": 2, "exce": 2, "overflow": 2, "storag": 2, "pass": 2, "properti": 2, "initi": 2, "memory_us": 2, "memori": 2, "byte": 2, "merg": 2, "summari": 2, "serial": 2, "proto": 2, "must": 2, "repres": 2, "same": 2, "contain": [2, 3], "correspond": 2, "empti": 2, "noise_confidence_interv": 2, "confidence_level": 2, "privacy_budget": 2, "confid": 2, "interv": 2, "within": 2, "specifi": [2, 3], "relev": 2, "specif": 2, "g": 2, "bound": [2, 3], "constructor": 2, "metric": 2, "gaug": 2, "error": 2, "introduc": [2, 3], "chanc": 2, "By": 2, "default": 2, "noiseconfidenceinterv": 2, "feasibli": 2, "overrid": 2, "output": 2, "conserv": 2, "whose": 2, "reli": 2, "size": 2, "privacy_budget_left": 2, "remain": 2, "quick_result": [2, 3], "consum": 2, "reset": 2, "first": [2, 3], "state": 2, "receiv": 2, "should": 2, "onli": [2, 3], "last": 2, "noise_interval_level": 2, "get": [2, 3], "includ": [2, 3], "entri": 2, "unimpl": 2, "boundedsum": [2, 3], "clamp": 2, "between": [2, 3], "upper": [2, 3], "lower": [2, 3], "manual": 2, "infer": 2, "boundedstandarddevi": 2, "standard": 2, "deviat": 2, "outsid": 2, "lie": 2, "simpli": 2, "varianc": 2, "squar": 2, "root": 2, "post": 2, "theorem": 2, "guarante": [2, 3], "non": 2, "neg": 2, "boundedvari": 2, "sinc": 2, "posit": 2, "o": 2, "time": 2, "fast": 2, "effici": 2, "grow": 2, "quadrat": 2, "linearli": 2, "might": 2, "produc": [2, 3], "good": 2, "unless": 2, "variat": 2, "theori": 2, "max": [2, 3], "min": [2, 3], "minium": 2, "median": [2, 3], "item": 2, "percentil": [2, 3], "perencetil": 2, "find": 2, "numerical_mechan": 2, "numericalmechan": 2, "base": 2, "\u025b": 2, "\ud835\udeff": 2, "differeni": 2, "add_nois": 2, "arg": 2, "kwarg": 2, "overload": 2, "self": 2, "noised_result": 2, "confidenceinterv": 2, "addnois": 2, "noised_value_above_threshold": 2, "arg0": 2, "arg1": 2, "bool": 2, "quickli": 2, "determin": 2, "abov": [2, 3], "laplacemechan": 2, "divers": 2, "laplac": [2, 3], "get_uniform_doubl": 2, "l1": 2, "gaussianmechan": 2, "gaussian": 2, "l2_sensit": 2, "l2": 2, "std": 2, "underli": 2, "gaussiandistribut": 2, "sampl": [2, 3], "gauss": 2, "stddev": 2, "factor": 2, "laplacedistribut": 2, "get_divers": 2, "often": [2, 3], "label": 2, "b": 2, "uniform": 2, "integ": [2, 3], "53": 2, "geometr": 2, "uniformdoubl": 2, "correl": 2, "linear": 2, "coeffici": 2, "get_next_power_of_two": 2, "power": 2, "greater": 2, "closest": 2, "given": 2, "doubl": [2, 3], "order_statist": 2, "place": 2, "ascend": 2, "order": 2, "qnorm": 2, "arg2": 2, "_pydp": 2, "statusord": 2, "quantil": 2, "invers": 2, "cumul": 2, "standard_devi": 2, "vector_filt": 2, "filter": 2, "vector": 2, "logic": 2, "operatio": 2, "true": 2, "vector_to_str": 2, "convers": 2, "string": 2, "partition_select": 2, "partitionselectionstrategi": 2, "strategi": 2, "should_keep": 2, "num_us": 2, "decid": 2, "whether": 2, "create_partition_strategi": 2, "max_partitions_contribut": 2, "creat": [2, 3], "truncated_geomter": 2, "truncat": 2, "varepsilon": 2, "todai": 3, "scientist": 3, "innov": 3, "futur": 3, "tend": 3, "handl": 3, "caus": 3, "memor": 3, "detail": 3, "ve": 3, "train": 3, "reduc": 3, "happen": 3, "framework": 3, "2020": 3, "therefor": 3, "control": 3, "written": 3, "thing": 3, "rememb": 3, "rocket": 3, "featur": 3, "mention": 3, "soon": 3, "smilei": 3, "fire": 3, "linux": 3, "maco": 3, "window": 3, "star": 3, "3": 3, "6": 3, "below": 3, "deprec": 3, "pipi": 3, "packag": 3, "manag": 3, "pip": 3, "pip3": 3, "separ": 3, "refer": 3, "tutori": 3, "code": 3, "jupyt": 3, "notebook": 3, "carrot": 3, "demo": 3, "file": 3, "basic": 3, "structur": 3, "union": 3, "denot": 3, "accept": 3, "loss": 3, "10": 3, "automat": 3, "version": 3, "github": 3, "blob": 3, "dev": 3, "py": 3, "input_data": 3, "go": 3, "join": 3, "check": 3, "lib_pydp": 3, "channel": 3, "code_dp_python": 3, "guidelin": 3, "pull": 3, "request": 3, "welcom": 3, "major": 3, "pleas": 3, "discuss": 3, "like": 3, "sure": 3, "test": 3, "appropri": 3, "contributor": 3, "apach": 3}, "objects": {"pydp.algorithms.laplacian": [[2, 0, 1, "", "BoundedMean"], [2, 0, 1, "", "BoundedStandardDeviation"], [2, 0, 1, "", "BoundedSum"], [2, 0, 1, "", "BoundedVariance"], [2, 0, 1, "", "Count"], [2, 0, 1, "", "Max"], [2, 0, 1, "", "Median"], [2, 0, 1, "", "Min"], [2, 0, 1, "", "Percentile"]], "pydp.algorithms.laplacian.BoundedMean": [[2, 1, 1, "", "add_entries"], [2, 1, 1, "", "add_entry"], [2, 2, 1, "", "delta"], [2, 2, 1, "", "epsilon"], [2, 2, 1, "", "l0_sensitivity"], [2, 2, 1, "", "linf_sensitivity"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "noise_confidence_interval"], [2, 1, 1, "", "privacy_budget_left"], [2, 1, 1, "", "quick_result"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "result"], [2, 1, 1, "", "serialize"]], "pydp.algorithms.laplacian.BoundedStandardDeviation": [[2, 1, 1, "", "add_entries"], [2, 1, 1, "", "add_entry"], [2, 2, 1, "", "delta"], [2, 2, 1, "", "epsilon"], [2, 2, 1, "", "l0_sensitivity"], [2, 2, 1, "", "linf_sensitivity"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "noise_confidence_interval"], [2, 1, 1, "", "privacy_budget_left"], [2, 1, 1, "", "quick_result"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "result"], [2, 1, 1, "", "serialize"]], "pydp.algorithms.laplacian.BoundedSum": [[2, 1, 1, "", "add_entries"], [2, 1, 1, "", "add_entry"], [2, 2, 1, "", "delta"], [2, 2, 1, "", "epsilon"], [2, 2, 1, "", "l0_sensitivity"], [2, 2, 1, "", "linf_sensitivity"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "noise_confidence_interval"], [2, 1, 1, "", "privacy_budget_left"], [2, 1, 1, "", "quick_result"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "result"], [2, 1, 1, "", "serialize"]], "pydp.algorithms.laplacian.BoundedVariance": [[2, 1, 1, "", "add_entries"], [2, 1, 1, "", "add_entry"], [2, 2, 1, "", "delta"], [2, 2, 1, "", "epsilon"], [2, 2, 1, "", "l0_sensitivity"], [2, 2, 1, "", "linf_sensitivity"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "noise_confidence_interval"], [2, 1, 1, "", "privacy_budget_left"], [2, 1, 1, "", "quick_result"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "result"], [2, 1, 1, "", "serialize"]], "pydp.algorithms.laplacian.Count": [[2, 1, 1, "", "add_entries"], [2, 1, 1, "", "add_entry"], [2, 2, 1, "", "delta"], [2, 2, 1, "", "epsilon"], [2, 2, 1, "", "l0_sensitivity"], [2, 2, 1, "", "linf_sensitivity"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "noise_confidence_interval"], [2, 1, 1, "", "privacy_budget_left"], [2, 1, 1, "", "quick_result"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "result"], [2, 1, 1, "", "serialize"]], "pydp.algorithms.laplacian.Max": [[2, 1, 1, "", "add_entries"], [2, 1, 1, "", "add_entry"], [2, 2, 1, "", "delta"], [2, 2, 1, "", "epsilon"], [2, 2, 1, "", "l0_sensitivity"], [2, 2, 1, "", "linf_sensitivity"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "noise_confidence_interval"], [2, 1, 1, "", "privacy_budget_left"], [2, 1, 1, "", "quick_result"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "result"], [2, 1, 1, "", "serialize"]], "pydp.algorithms.laplacian.Median": [[2, 1, 1, "", "add_entries"], [2, 1, 1, "", "add_entry"], [2, 2, 1, "", "delta"], [2, 2, 1, "", "epsilon"], [2, 2, 1, "", "l0_sensitivity"], [2, 2, 1, "", "linf_sensitivity"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "noise_confidence_interval"], [2, 1, 1, "", "privacy_budget_left"], [2, 1, 1, "", "quick_result"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "result"], [2, 1, 1, "", "serialize"]], "pydp.algorithms.laplacian.Min": [[2, 1, 1, "", "add_entries"], [2, 1, 1, "", "add_entry"], [2, 2, 1, "", "delta"], [2, 2, 1, "", "epsilon"], [2, 2, 1, "", "l0_sensitivity"], [2, 2, 1, "", "linf_sensitivity"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "noise_confidence_interval"], [2, 1, 1, "", "privacy_budget_left"], [2, 1, 1, "", "quick_result"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "result"], [2, 1, 1, "", "serialize"]], "pydp.algorithms.laplacian.Percentile": [[2, 1, 1, "", "add_entries"], [2, 1, 1, "", "add_entry"], [2, 2, 1, "", "delta"], [2, 2, 1, "", "epsilon"], [2, 2, 1, "", "l0_sensitivity"], [2, 2, 1, "", "linf_sensitivity"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "noise_confidence_interval"], [2, 2, 1, "", "percentile"], [2, 1, 1, "", "privacy_budget_left"], [2, 1, 1, "", "quick_result"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "result"], [2, 1, 1, "", "serialize"]], "pydp.algorithms.numerical_mechanisms": [[2, 0, 1, "", "GaussianMechanism"], [2, 0, 1, "", "LaplaceMechanism"], [2, 0, 1, "", "NumericalMechanism"]], "pydp.algorithms.numerical_mechanisms.GaussianMechanism": [[2, 2, 1, "", "delta"], [2, 2, 1, "", "l2_sensitivity"], [2, 2, 1, "", "std"]], "pydp.algorithms.numerical_mechanisms.LaplaceMechanism": [[2, 2, 1, "", "diversity"], [2, 1, 1, "", "get_uniform_double"], [2, 2, 1, "", "sensitivity"]], "pydp.algorithms.numerical_mechanisms.NumericalMechanism": [[2, 1, 1, "", "add_noise"], [2, 2, 1, "", "epsilon"], [2, 1, 1, "", "memory_used"], [2, 1, 1, "", "noise_confidence_interval"], [2, 1, 1, "", "noised_value_above_threshold"]], "pydp.algorithms.partition_selection": [[2, 0, 1, "", "PartitionSelectionStrategy"], [2, 3, 1, "", "create_partition_strategy"]], "pydp.algorithms.partition_selection.PartitionSelectionStrategy": [[2, 1, 1, "", "should_keep"]], "pydp.distributions": [[2, 0, 1, "", "GaussianDistribution"], [2, 0, 1, "", "LaplaceDistribution"]], "pydp.distributions.GaussianDistribution": [[2, 1, 1, "", "sample"], [2, 2, 1, "", "stddev"]], "pydp.distributions.LaplaceDistribution": [[2, 1, 1, "", "get_diversity"], [2, 1, 1, "", "get_uniform_double"], [2, 1, 1, "", "sample"]], "pydp": [[2, 4, 0, "-", "util"]], "pydp.util": [[2, 3, 1, "", "Geometric"], [2, 3, 1, "", "UniformDouble"], [2, 3, 1, "", "correlation"], [2, 3, 1, "", "get_next_power_of_two"], [2, 3, 1, "", "mean"], [2, 3, 1, "", "order_statistics"], [2, 3, 1, "", "qnorm"], [2, 3, 1, "", "standard_deviation"], [2, 3, 1, "", "variance"], [2, 3, 1, "", "vector_filter"], [2, 3, 1, "", "vector_to_string"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"]}, "titleterms": {"pydp": [0, 2, 3], "document": 0, "introduct": [1, 3], "To": 1, "differenti": 1, "privaci": 1, "machin": 1, "learn": [1, 3], "data": 1, "why": 1, "i": 1, "so": 1, "import": 1, "how": 1, "implement": 1, "local": 1, "global": 1, "formal": 1, "definit": 1, "Of": 1, "In": 1, "real": 1, "world": 1, "further": 1, "read": 1, "algorithm": 2, "numer": 2, "mechan": 2, "distribut": 2, "util": 2, "ml": 2, "partit": 2, "select": 2, "instal": 3, "exampl": 3, "resourc": 3, "support": 3, "commun": 3, "slack": 3, "contribut": 3, "licens": 3}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"PyDP Documentation": [[0, "pydp-documentation"]], "Introduction To Differential Privacy": [[1, "introduction-to-differential-privacy"]], "Introduction": [[1, "introduction"]], "Machine Learning and Data": [[1, "machine-learning-and-data"]], "Why is Differential Privacy so important ?": [[1, "why-is-differential-privacy-so-important"]], "How is Differential Privacy implemented ?": [[1, "how-is-differential-privacy-implemented"]], "Local Differential Privacy": [[1, "local-differential-privacy"]], "Global Differential Privacy": [[1, "global-differential-privacy"]], "Formal Definition Of Differential Privacy": [[1, "formal-definition-of-differential-privacy"]], "Differential - Privacy In Real World": [[1, "differential-privacy-in-real-world"]], "Further Reading": [[1, "further-reading"]], "PyDP": [[2, "pydp"]], "Algorithms": [[2, "algorithms"]], "Numerical Mechanisms": [[2, "numerical-mechanisms"]], "Distributions": [[2, "distributions"]], "Util": [[2, "module-pydp.util"]], "ML": [[2, "ml"]], "Partition Selection": [[2, "partition-selection"]], "Introduction to PyDP": [[3, "introduction-to-pydp"]], "Installation": [[3, "installation"]], "Examples": [[3, "examples"]], "Learning Resources": [[3, "learning-resources"]], "Support and Community on Slack": [[3, "support-and-community-on-slack"]], "Contributing": [[3, "contributing"]], "License": [[3, "license"]]}, "indexentries": {"boundedmean (class in pydp.algorithms.laplacian)": [[2, "pydp.algorithms.laplacian.BoundedMean"]], "boundedstandarddeviation (class in pydp.algorithms.laplacian)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation"]], "boundedsum (class in pydp.algorithms.laplacian)": [[2, "pydp.algorithms.laplacian.BoundedSum"]], "boundedvariance (class in pydp.algorithms.laplacian)": [[2, "pydp.algorithms.laplacian.BoundedVariance"]], "count (class in pydp.algorithms.laplacian)": [[2, "pydp.algorithms.laplacian.Count"]], "gaussiandistribution (class in pydp.distributions)": [[2, "pydp.distributions.GaussianDistribution"]], "gaussianmechanism (class in pydp.algorithms.numerical_mechanisms)": [[2, "pydp.algorithms.numerical_mechanisms.GaussianMechanism"]], "geometric() (in module pydp.util)": [[2, "pydp.util.Geometric"]], "laplacedistribution (class in pydp.distributions)": [[2, "pydp.distributions.LaplaceDistribution"]], "laplacemechanism (class in pydp.algorithms.numerical_mechanisms)": [[2, "pydp.algorithms.numerical_mechanisms.LaplaceMechanism"]], "max (class in pydp.algorithms.laplacian)": [[2, "pydp.algorithms.laplacian.Max"]], "median (class in pydp.algorithms.laplacian)": [[2, "pydp.algorithms.laplacian.Median"]], "min (class in pydp.algorithms.laplacian)": [[2, "pydp.algorithms.laplacian.Min"]], "numericalmechanism (class in pydp.algorithms.numerical_mechanisms)": [[2, "pydp.algorithms.numerical_mechanisms.NumericalMechanism"]], "partitionselectionstrategy (class in pydp.algorithms.partition_selection)": [[2, "pydp.algorithms.partition_selection.PartitionSelectionStrategy"]], "percentile (class in pydp.algorithms.laplacian)": [[2, "pydp.algorithms.laplacian.Percentile"]], "uniformdouble() (in module pydp.util)": [[2, "pydp.util.UniformDouble"]], "add_entries() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.add_entries"]], "add_entries() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.add_entries"]], "add_entries() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.add_entries"]], "add_entries() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.add_entries"]], "add_entries() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.add_entries"]], "add_entries() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.add_entries"]], "add_entries() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.add_entries"]], "add_entries() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.add_entries"]], "add_entries() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.add_entries"]], "add_entry() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.add_entry"]], "add_entry() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.add_entry"]], "add_entry() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.add_entry"]], "add_entry() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.add_entry"]], "add_entry() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.add_entry"]], "add_entry() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.add_entry"]], "add_entry() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.add_entry"]], "add_entry() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.add_entry"]], "add_entry() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.add_entry"]], "add_noise() (pydp.algorithms.numerical_mechanisms.numericalmechanism method)": [[2, "pydp.algorithms.numerical_mechanisms.NumericalMechanism.add_noise"]], "correlation() (in module pydp.util)": [[2, "pydp.util.correlation"]], "create_partition_strategy() (in module pydp.algorithms.partition_selection)": [[2, "pydp.algorithms.partition_selection.create_partition_strategy"]], "delta (pydp.algorithms.laplacian.boundedmean property)": [[2, "pydp.algorithms.laplacian.BoundedMean.delta"]], "delta (pydp.algorithms.laplacian.boundedstandarddeviation property)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.delta"]], "delta (pydp.algorithms.laplacian.boundedsum property)": [[2, "pydp.algorithms.laplacian.BoundedSum.delta"]], "delta (pydp.algorithms.laplacian.boundedvariance property)": [[2, "pydp.algorithms.laplacian.BoundedVariance.delta"]], "delta (pydp.algorithms.laplacian.count property)": [[2, "pydp.algorithms.laplacian.Count.delta"]], "delta (pydp.algorithms.laplacian.max property)": [[2, "pydp.algorithms.laplacian.Max.delta"]], "delta (pydp.algorithms.laplacian.median property)": [[2, "pydp.algorithms.laplacian.Median.delta"]], "delta (pydp.algorithms.laplacian.min property)": [[2, "pydp.algorithms.laplacian.Min.delta"]], "delta (pydp.algorithms.laplacian.percentile property)": [[2, "pydp.algorithms.laplacian.Percentile.delta"]], "delta (pydp.algorithms.numerical_mechanisms.gaussianmechanism property)": [[2, "pydp.algorithms.numerical_mechanisms.GaussianMechanism.delta"]], "diversity (pydp.algorithms.numerical_mechanisms.laplacemechanism property)": [[2, "pydp.algorithms.numerical_mechanisms.LaplaceMechanism.diversity"]], "epsilon (pydp.algorithms.laplacian.boundedmean property)": [[2, "pydp.algorithms.laplacian.BoundedMean.epsilon"]], "epsilon (pydp.algorithms.laplacian.boundedstandarddeviation property)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.epsilon"]], "epsilon (pydp.algorithms.laplacian.boundedsum property)": [[2, "pydp.algorithms.laplacian.BoundedSum.epsilon"]], "epsilon (pydp.algorithms.laplacian.boundedvariance property)": [[2, "pydp.algorithms.laplacian.BoundedVariance.epsilon"]], "epsilon (pydp.algorithms.laplacian.count property)": [[2, "pydp.algorithms.laplacian.Count.epsilon"]], "epsilon (pydp.algorithms.laplacian.max property)": [[2, "pydp.algorithms.laplacian.Max.epsilon"]], "epsilon (pydp.algorithms.laplacian.median property)": [[2, "pydp.algorithms.laplacian.Median.epsilon"]], "epsilon (pydp.algorithms.laplacian.min property)": [[2, "pydp.algorithms.laplacian.Min.epsilon"]], "epsilon (pydp.algorithms.laplacian.percentile property)": [[2, "pydp.algorithms.laplacian.Percentile.epsilon"]], "epsilon (pydp.algorithms.numerical_mechanisms.numericalmechanism property)": [[2, "pydp.algorithms.numerical_mechanisms.NumericalMechanism.epsilon"]], "get_diversity() (pydp.distributions.laplacedistribution method)": [[2, "pydp.distributions.LaplaceDistribution.get_diversity"]], "get_next_power_of_two() (in module pydp.util)": [[2, "pydp.util.get_next_power_of_two"]], "get_uniform_double() (pydp.algorithms.numerical_mechanisms.laplacemechanism method)": [[2, "pydp.algorithms.numerical_mechanisms.LaplaceMechanism.get_uniform_double"]], "get_uniform_double() (pydp.distributions.laplacedistribution method)": [[2, "pydp.distributions.LaplaceDistribution.get_uniform_double"]], "l0_sensitivity (pydp.algorithms.laplacian.boundedmean property)": [[2, "pydp.algorithms.laplacian.BoundedMean.l0_sensitivity"]], "l0_sensitivity (pydp.algorithms.laplacian.boundedstandarddeviation property)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.l0_sensitivity"]], "l0_sensitivity (pydp.algorithms.laplacian.boundedsum property)": [[2, "pydp.algorithms.laplacian.BoundedSum.l0_sensitivity"]], "l0_sensitivity (pydp.algorithms.laplacian.boundedvariance property)": [[2, "pydp.algorithms.laplacian.BoundedVariance.l0_sensitivity"]], "l0_sensitivity (pydp.algorithms.laplacian.count property)": [[2, "pydp.algorithms.laplacian.Count.l0_sensitivity"]], "l0_sensitivity (pydp.algorithms.laplacian.max property)": [[2, "pydp.algorithms.laplacian.Max.l0_sensitivity"]], "l0_sensitivity (pydp.algorithms.laplacian.median property)": [[2, "pydp.algorithms.laplacian.Median.l0_sensitivity"]], "l0_sensitivity (pydp.algorithms.laplacian.min property)": [[2, "pydp.algorithms.laplacian.Min.l0_sensitivity"]], "l0_sensitivity (pydp.algorithms.laplacian.percentile property)": [[2, "pydp.algorithms.laplacian.Percentile.l0_sensitivity"]], "l2_sensitivity (pydp.algorithms.numerical_mechanisms.gaussianmechanism property)": [[2, "pydp.algorithms.numerical_mechanisms.GaussianMechanism.l2_sensitivity"]], "linf_sensitivity (pydp.algorithms.laplacian.boundedmean property)": [[2, "pydp.algorithms.laplacian.BoundedMean.linf_sensitivity"]], "linf_sensitivity (pydp.algorithms.laplacian.boundedstandarddeviation property)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.linf_sensitivity"]], "linf_sensitivity (pydp.algorithms.laplacian.boundedsum property)": [[2, "pydp.algorithms.laplacian.BoundedSum.linf_sensitivity"]], "linf_sensitivity (pydp.algorithms.laplacian.boundedvariance property)": [[2, "pydp.algorithms.laplacian.BoundedVariance.linf_sensitivity"]], "linf_sensitivity (pydp.algorithms.laplacian.count property)": [[2, "pydp.algorithms.laplacian.Count.linf_sensitivity"]], "linf_sensitivity (pydp.algorithms.laplacian.max property)": [[2, "pydp.algorithms.laplacian.Max.linf_sensitivity"]], "linf_sensitivity (pydp.algorithms.laplacian.median property)": [[2, "pydp.algorithms.laplacian.Median.linf_sensitivity"]], "linf_sensitivity (pydp.algorithms.laplacian.min property)": [[2, "pydp.algorithms.laplacian.Min.linf_sensitivity"]], "linf_sensitivity (pydp.algorithms.laplacian.percentile property)": [[2, "pydp.algorithms.laplacian.Percentile.linf_sensitivity"]], "mean() (in module pydp.util)": [[2, "pydp.util.mean"]], "memory_used() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.memory_used"]], "memory_used() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.memory_used"]], "memory_used() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.memory_used"]], "memory_used() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.memory_used"]], "memory_used() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.memory_used"]], "memory_used() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.memory_used"]], "memory_used() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.memory_used"]], "memory_used() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.memory_used"]], "memory_used() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.memory_used"]], "memory_used() (pydp.algorithms.numerical_mechanisms.numericalmechanism method)": [[2, "pydp.algorithms.numerical_mechanisms.NumericalMechanism.memory_used"]], "merge() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.merge"]], "merge() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.merge"]], "merge() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.merge"]], "merge() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.merge"]], "merge() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.merge"]], "merge() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.merge"]], "merge() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.merge"]], "merge() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.merge"]], "merge() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.merge"]], "module": [[2, "module-pydp.util"]], "noise_confidence_interval() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.noise_confidence_interval"]], "noise_confidence_interval() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.noise_confidence_interval"]], "noise_confidence_interval() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.noise_confidence_interval"]], "noise_confidence_interval() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.noise_confidence_interval"]], "noise_confidence_interval() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.noise_confidence_interval"]], "noise_confidence_interval() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.noise_confidence_interval"]], "noise_confidence_interval() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.noise_confidence_interval"]], "noise_confidence_interval() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.noise_confidence_interval"]], "noise_confidence_interval() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.noise_confidence_interval"]], "noise_confidence_interval() (pydp.algorithms.numerical_mechanisms.numericalmechanism method)": [[2, "pydp.algorithms.numerical_mechanisms.NumericalMechanism.noise_confidence_interval"]], "noised_value_above_threshold() (pydp.algorithms.numerical_mechanisms.numericalmechanism method)": [[2, "pydp.algorithms.numerical_mechanisms.NumericalMechanism.noised_value_above_threshold"]], "order_statistics() (in module pydp.util)": [[2, "pydp.util.order_statistics"]], "percentile (pydp.algorithms.laplacian.percentile property)": [[2, "pydp.algorithms.laplacian.Percentile.percentile"]], "privacy_budget_left() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.privacy_budget_left"]], "privacy_budget_left() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.privacy_budget_left"]], "privacy_budget_left() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.privacy_budget_left"]], "privacy_budget_left() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.privacy_budget_left"]], "privacy_budget_left() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.privacy_budget_left"]], "privacy_budget_left() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.privacy_budget_left"]], "privacy_budget_left() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.privacy_budget_left"]], "privacy_budget_left() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.privacy_budget_left"]], "privacy_budget_left() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.privacy_budget_left"]], "pydp.util": [[2, "module-pydp.util"]], "qnorm() (in module pydp.util)": [[2, "pydp.util.qnorm"]], "quick_result() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.quick_result"]], "quick_result() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.quick_result"]], "quick_result() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.quick_result"]], "quick_result() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.quick_result"]], "quick_result() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.quick_result"]], "quick_result() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.quick_result"]], "quick_result() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.quick_result"]], "quick_result() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.quick_result"]], "quick_result() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.quick_result"]], "reset() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.reset"]], "reset() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.reset"]], "reset() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.reset"]], "reset() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.reset"]], "reset() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.reset"]], "reset() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.reset"]], "reset() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.reset"]], "reset() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.reset"]], "reset() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.reset"]], "result() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.result"]], "result() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.result"]], "result() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.result"]], "result() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.result"]], "result() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.result"]], "result() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.result"]], "result() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.result"]], "result() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.result"]], "result() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.result"]], "sample() (pydp.distributions.gaussiandistribution method)": [[2, "pydp.distributions.GaussianDistribution.sample"]], "sample() (pydp.distributions.laplacedistribution method)": [[2, "pydp.distributions.LaplaceDistribution.sample"]], "sensitivity (pydp.algorithms.numerical_mechanisms.laplacemechanism property)": [[2, "pydp.algorithms.numerical_mechanisms.LaplaceMechanism.sensitivity"]], "serialize() (pydp.algorithms.laplacian.boundedmean method)": [[2, "pydp.algorithms.laplacian.BoundedMean.serialize"]], "serialize() (pydp.algorithms.laplacian.boundedstandarddeviation method)": [[2, "pydp.algorithms.laplacian.BoundedStandardDeviation.serialize"]], "serialize() (pydp.algorithms.laplacian.boundedsum method)": [[2, "pydp.algorithms.laplacian.BoundedSum.serialize"]], "serialize() (pydp.algorithms.laplacian.boundedvariance method)": [[2, "pydp.algorithms.laplacian.BoundedVariance.serialize"]], "serialize() (pydp.algorithms.laplacian.count method)": [[2, "pydp.algorithms.laplacian.Count.serialize"]], "serialize() (pydp.algorithms.laplacian.max method)": [[2, "pydp.algorithms.laplacian.Max.serialize"]], "serialize() (pydp.algorithms.laplacian.median method)": [[2, "pydp.algorithms.laplacian.Median.serialize"]], "serialize() (pydp.algorithms.laplacian.min method)": [[2, "pydp.algorithms.laplacian.Min.serialize"]], "serialize() (pydp.algorithms.laplacian.percentile method)": [[2, "pydp.algorithms.laplacian.Percentile.serialize"]], "should_keep() (pydp.algorithms.partition_selection.partitionselectionstrategy method)": [[2, "pydp.algorithms.partition_selection.PartitionSelectionStrategy.should_keep"]], "standard_deviation() (in module pydp.util)": [[2, "pydp.util.standard_deviation"]], "std (pydp.algorithms.numerical_mechanisms.gaussianmechanism property)": [[2, "pydp.algorithms.numerical_mechanisms.GaussianMechanism.std"]], "stddev (pydp.distributions.gaussiandistribution property)": [[2, "pydp.distributions.GaussianDistribution.stddev"]], "variance() (in module pydp.util)": [[2, "pydp.util.variance"]], "vector_filter() (in module pydp.util)": [[2, "pydp.util.vector_filter"]], "vector_to_string() (in module pydp.util)": [[2, "pydp.util.vector_to_string"]]}})